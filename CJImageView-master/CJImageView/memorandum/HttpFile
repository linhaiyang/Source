

抓包


请求报文
POST /somedir/page.html HTTP/1.1
//以上是请求行:方法字段、URL字段和HTTP版本字段
Host: www.user.com
Content-Type: application/x-www-form-urlencoded
Connection: Keep-Alive
User-agent: Mozilla/5.0.
Accept-lauguage: fr
//以上是首部行  请求头部
（此处必须有一空行）  //空行分割header和请求内容
name=world   请求体

响应报文
HTTP/1.1 200 OK
//以上是状态行：协议版本字段、状态码、相应状态信息
Connection：close
Server:Apache/2.2.3(CentOS)
Date: Sat, 31 Dec 2005 23:59:59 GMT
Content-Type: text/html
Content-Length: 122
//以上是首部行 响应头部
（此处必须有一空行）  //空行分割header和实体主体
(data data data data)//响应实体主体




GET请求会主动进行Cache 直接由CDN缓存，大大减轻服务器的负担
GET：获取资源是 安全的，幂等的(只读的，纯粹的)， 可缓存的
对于GET方式的请求，浏览器会把Header和实体主体一并发送出去，服务器响应200（返回数据）；

而对于POST，浏览器先发送Header，服务器响应100 Continue，浏览器再发送实体主体，服务器响应200 OK（返回数据）。
POST：获取资源是 非安全的，非幂等的，不可缓存的




二、TCP/IP 中有两个具有代表性的传输层协议----TCP 和 UDP。

UDP
UDP协议全称是用户数据报协议。。。。
1. 面向无连接
首先 UDP 是不需要和 TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作
3. UDP是面向报文的
发送方的UDP对应用程序交下来的报文，在添加首部后就向下交付IP层。UDP对应用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界。因此，应用程序必须选择合适大小的报文

TCP
TCP协议全称是传输控制协议是一种面向连接的、可靠的、基于字节流的传输层通信协议，
为什么TCP建立连接需要三次握手，而不是两次？这是因为这是为了防止出现失效的连接请求报文段被服务端接收的情况，从而产生错误。
2. 总结
TCP向上层提供面向连接的可靠服务 ，UDP向上层提供无连接不可靠服务。
虽然 UDP 并没有 TCP 传输来的准确，但是也能在很多实时性要求高的地方有所作为
对数据准确性要求高，速度可以相对较慢的，可以选用TCP


Socket
应用程序利用套接字，可以设置对端的 IP 地址，端口号，并实现数据的发送与接收。
网络上的两个程序通过一个双向的通信连接实现数据的交换，这个连接的一端称为一个 Socket。
Socket 本质是编程接口(API)，对 TCP/IP 的封装，TCP/IP 也要提供可供程序员做网络开发所用的接口，这就是 Socket 编程接口；

